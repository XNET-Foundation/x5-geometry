// TypeScript array of nouns for XNet
// Created by Sint Connexa, 18 August 2022

export const nouns: string[] = [
    "aardvark",
    "aardwolf",
    "abacus",
    "abrosaurus",
    "abstract",
    "acai",
    "acapella",
    "accelerator",
    "accordion",
    "account",
    "achillobator",
    "acorn",
    "acoustic",
    "acrylic",
    "act",
    "action",
    "activity",
    "actress",
    "adapter",
    "adasaurus",
    "addition",
    "address",
    "adjustment",
    "advantage",
    "adverb",
    "aerosteon",
    "afrovenator",
    "aftermath",
    "afternoon",
    "aftershave",
    "afterthought",
    "agate",
    "age",
    "agenda",
    "agreement",
    "agustinia",
    "air",
    "airboat",
    "airbus",
    "airedale",
    "airmail",
    "airplane",
    "airport",
    "airship",
    "akubra",
    "alamosaurus",
    "alarm",
    "albacore",
    "albatross",
    "albertonykus",
    "albertosaurus",
    "alder",
    "aletopelta",
    "alfalfa",
    "algebra",
    "alibi",
    "alley",
    "alligator",
    "allium",
    "allosaurus",
    "alloy",
    "allspice",
    "almanac",
    "almandine",
    "almond",
    "alpaca",
    "alphabet",
    "alto",
    "aluminum",
    "alvarezsaurus",
    "alyssum",
    "amaranthus",
    "amaryllis",
    "amazonsaurus",
    "ambert",
    "ambulance",
    "amethyst",
    "amount",
    "amp",
    "ampersand",
    "amphibian",
    "amusement",
    "anaconda",
    "anatosaurus",
    "anchovy",
    "ancient",
    "andesaurus",
    "anemone",
    "angelfish",
    "anger",
    "angle",
    "anglerfish",
    "angolatitan",
    "angora",
    "animal",
    "animantarx",
    "anise",
    "ankle",
    "ankylosaurus",
    "anorak",
    "answer",
    "ant",
    "antarctopelta",
    "anteater",
    "antelope",
    "anthropology",
    "antimatter",
    "antimony",
    "antique",
    "antler",
    "antlion",
    "apartment",
    "apatosaurus",
    "aphid",
    "apogee",
    "apology",
    "appalachiosaurus",
    "apparatus",
    "apparel",
    "appeal",
    "appendix",
    "apple",
    "appliance",
    "approach",
    "approval",
    "apricot",
    "aquarius",
    "aragon",
    "aragosaurus",
    "arch",
    "archaeology",
    "archaeopteryx",
    "archduchess",
    "archduke",
    "archeology",
    "archer",
    "area",
    "argon",
    "argument",
    "aries",
    "aristosuchus",
    "arithmetic",
    "armadillo",
    "armchair",
    "army",
    "arrhinceratops",
    "arrow",
    "art",
    "arthropod",
    "artichoke",
    "article",
    "ash",
    "asiago",
    "asp",
    "asparagus",
    "aspen",
    "asphalt",
    "aster",
    "asterisk",
    "asteroid",
    "astrodon",
    "astronaut",
    "astronomy",
    "athlete",
    "atlasaurus",
    "atmosphere",
    "atom",
    "atrociraptor",
    "attack",
    "attempt",
    "attention",
    "attic",
    "attraction",
    "august",
    "aura",
    "aurora",
    "auroraceratops",
    "author",
    "authority",
    "authorization",
    "avatar",
    "avenue",
    "avocado",
    "awe",
    "axolotl",
    "azalea",
    "azimuth",
    "babcat",
    "baboon",
    "backbone",
    "background",
    "backpack",
    "bactrosaurus",
    "badge",
    "badger",
    "bag",
    "bagel",
    "bagpipe",
    "bait",
    "bakery",
    "balance",
    "balaur",
    "ball",
    "ballcap",
    "balloon",
    "balmoral",
    "bambiraptor",
    "bamboo",
    "banana",
    "band",
    "bandana",
    "bandicoot",
    "bangle",
    "banjo",
    "bank",
    "bar",
    "barbecue",
    "barber",
    "barberry",
    "bard",
    "barge",
    "baritone",
    "barn",
    "barnacle",
    "barnyard",
    "barometer",
    "baron",
    "baroness",
    "barracuda",
    "baryonyx",
    "baseball",
    "basement",
    "basil",
    "basilisk",
    "basin",
    "basket",
    "basketball",
    "bass",
    "bassoon",
    "bat",
    "bath",
    "bathroom",
    "bathtub",
    "battery",
    "bay",
    "bayberry",
    "beach",
    "bead",
    "beak"
];

// Helper functions for working with nouns
export function getNounIndex(word: string): number {
    return nouns.indexOf(word.toLowerCase());
}

export function getNounByIndex(index: number): string {
    return nouns[index] || '';
}

export function isNoun(word: string): boolean {
    return getNounIndex(word) !== -1;
}

export function getRandomNoun(): string {
    return nouns[Math.floor(Math.random() * nouns.length)];
} 